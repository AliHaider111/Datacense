{"ast":null,"code":"import Axios from './_instance';\nlet abortController = new AbortController();\nexport async function getHttpRequest(url, data) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const requestConfig = {\n    signal: abortController.signal,\n    ...config\n  };\n  return Axios.get(url, requestConfig);\n}\nexport async function postHttpRequest(url, data) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const requestConfig = {\n    signal: abortController.signal,\n    ...config\n  };\n  return Axios.post(url, data, requestConfig);\n}\nexport async function putHttpRequest(url, data) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const requestConfig = {\n    signal: abortController.signal,\n    ...config\n  };\n  return Axios.put(url, data, requestConfig);\n}\nexport function cancelOngoingHttpRequest() {\n  abortController.abort();\n\n  // regenerate AbortSignal for future HTTP calls\n  abortController = new AbortController();\n}","map":{"version":3,"names":["Axios","abortController","AbortController","getHttpRequest","url","data","config","arguments","length","undefined","requestConfig","signal","get","postHttpRequest","post","putHttpRequest","put","cancelOngoingHttpRequest","abort"],"sources":["/home/ali/Ali code-p/Datacense-tk/Datacense-task/client/src/axios/index.js"],"sourcesContent":["import Axios from './_instance';\n\n\nlet abortController = new AbortController();\n\nexport async function getHttpRequest(url, data, config = {}) {\n    const requestConfig = {\n        signal: abortController.signal,\n        ...config,\n    };\n\n    return Axios.get(url, requestConfig);\n}\n\nexport async function postHttpRequest(url, data, config = {}) {\n    const requestConfig = {\n        signal: abortController.signal,\n        ...config,\n    };\n\n    return Axios.post(url, data, requestConfig);\n}\n\nexport async function putHttpRequest(url, data, config = {}) {\n    const requestConfig = {\n        signal: abortController.signal,\n        ...config,\n    };\n\n    return Axios.put(url, data, requestConfig);\n}\n\nexport function cancelOngoingHttpRequest() {\n    abortController.abort();\n\n    // regenerate AbortSignal for future HTTP calls\n    abortController = new AbortController();\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,aAAa;AAG/B,IAAIC,eAAe,GAAG,IAAIC,eAAe,CAAC,CAAC;AAE3C,OAAO,eAAeC,cAAcA,CAACC,GAAG,EAAEC,IAAI,EAAe;EAAA,IAAbC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACvD,MAAMG,aAAa,GAAG;IAClBC,MAAM,EAAEV,eAAe,CAACU,MAAM;IAC9B,GAAGL;EACP,CAAC;EAED,OAAON,KAAK,CAACY,GAAG,CAACR,GAAG,EAAEM,aAAa,CAAC;AACxC;AAEA,OAAO,eAAeG,eAAeA,CAACT,GAAG,EAAEC,IAAI,EAAe;EAAA,IAAbC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACxD,MAAMG,aAAa,GAAG;IAClBC,MAAM,EAAEV,eAAe,CAACU,MAAM;IAC9B,GAAGL;EACP,CAAC;EAED,OAAON,KAAK,CAACc,IAAI,CAACV,GAAG,EAAEC,IAAI,EAAEK,aAAa,CAAC;AAC/C;AAEA,OAAO,eAAeK,cAAcA,CAACX,GAAG,EAAEC,IAAI,EAAe;EAAA,IAAbC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACvD,MAAMG,aAAa,GAAG;IAClBC,MAAM,EAAEV,eAAe,CAACU,MAAM;IAC9B,GAAGL;EACP,CAAC;EAED,OAAON,KAAK,CAACgB,GAAG,CAACZ,GAAG,EAAEC,IAAI,EAAEK,aAAa,CAAC;AAC9C;AAEA,OAAO,SAASO,wBAAwBA,CAAA,EAAG;EACvChB,eAAe,CAACiB,KAAK,CAAC,CAAC;;EAEvB;EACAjB,eAAe,GAAG,IAAIC,eAAe,CAAC,CAAC;AAC3C"},"metadata":{},"sourceType":"module","externalDependencies":[]}