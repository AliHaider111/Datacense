{"ast":null,"code":"import axios from 'axios';\nimport debug from 'debug';\nimport { store } from '../store';\n\n// Create separate debug function for separate purposes of debugging\nconst debugHttpRequestError = debug('digno:error:http:request');\nconst debugHttpResponse = debug('digno:http:response');\nconst debugHttpResponseError = debug('digno:error:http:response');\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BASE_API\n});\n\n// Add a request interceptor on this `instance` of `axios`\nfunction insertString(origString, stringToAdd, indexPosition) {\n  var newString = origString.slice(0, indexPosition) + stringToAdd + origString.slice(indexPosition);\n  return newString;\n}\ninstance.interceptors.request.use(function (config) {\n  // Do something before the request is sent\n\n  // Get access token from Redux store and add it to request headers\n  // const accessToken = appState.auth.accessToken || null;\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  var indexes = [3, 5, 6, 9, 11, 14, 18, 26, 30, 55, 58];\n  // console.log(\"charactersLength\",charactersLength,\"charactersLength\")\n  for (var i = 0; i < charactersLength; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  var newToken = result;\n  for (let i = 0; i < indexes.length; i++) {\n    if (indexes[i] % 2 == 0) {\n      newToken = insertString(newToken, \"a\", indexes[i]);\n    } else {\n      newToken = insertString(newToken, \"s\", indexes[i]);\n    }\n  }\n  // console.log(\"newToken=========\",newToken)\n\n  const accessToken = store.getState().authSlice.accessToken;\n  if (accessToken !== '') {\n    config.headers['Authorization'] = `Bearer ${accessToken}`;\n    config.headers['x-access-token'] = `${accessToken}`;\n    config.headers['site-auth-token'] = newToken;\n  }\n\n  // Return the modified request config object for proceeding\n  return config;\n}, function (error) {\n  if (error.request) {\n    // The request was made but no response was received\n    // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n    // http.ClientRequest in node.js\n    debugHttpRequestError('%o', error.request);\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    debugHttpRequestError('Error %s', error.message);\n  }\n\n  // log a detailed information about the HTTP error\n  debugHttpRequestError(error.toJSON());\n\n  // Return the error object for next Promise chain\n  return Promise.reject(error);\n});\n\n// Add a response interceptor on this `instance` of `axios`\ninstance.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n\n  // Log the HTTP response on console\n  debugHttpResponse(`${response.config.method} ${response.config.url} %o`, response.data);\n  return response;\n}, function (error) {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n\n  if (axios.isCancel(error)) {\n    debugHttpResponseError(error.message);\n  } else {\n    if (error.response) {\n      // Log the HTTP error info\n      debugHttpResponseError(`${error.config.method} ${error.config.url} %o`, error.response.data);\n\n      // Clear the Redux store if response code is 401 (Unauthenticated)\n      if (error.response.status === 401) {\n        // logout();\n      }\n    }\n\n    // log a detailed information about the HTTP error\n    debugHttpResponseError(error.toJSON());\n  }\n\n  // Return the error object for next Promise chain\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","debug","store","debugHttpRequestError","debugHttpResponse","debugHttpResponseError","instance","create","baseURL","process","env","REACT_APP_BASE_API","insertString","origString","stringToAdd","indexPosition","newString","slice","interceptors","request","use","config","result","characters","charactersLength","length","indexes","i","charAt","Math","floor","random","newToken","accessToken","getState","authSlice","headers","error","message","toJSON","Promise","reject","response","method","url","data","isCancel","status"],"sources":["/home/ali/Ali code-p/Datacense-tk/Datacense-task/client/src/axios/_instance.js"],"sourcesContent":["import axios from 'axios';\nimport debug from 'debug';\nimport {store} from '../store';\n\n// Create separate debug function for separate purposes of debugging\nconst debugHttpRequestError = debug('digno:error:http:request');\nconst debugHttpResponse = debug('digno:http:response');\nconst debugHttpResponseError = debug('digno:error:http:response');\n\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_BASE_API,\n});\n\n// Add a request interceptor on this `instance` of `axios`\nfunction insertString(origString,stringToAdd,indexPosition) {\n \n\n    var newString = origString.slice(0, indexPosition)\n            + stringToAdd\n            + origString.slice(indexPosition);\n    return newString;\n}\ninstance.interceptors.request.use(\n    function (config) {\n        // Do something before the request is sent\n\n        // Get access token from Redux store and add it to request headers\n        // const accessToken = appState.auth.accessToken || null;\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        var indexes=[3,5,6,9,11,14,18,26,30,55,58]\n        // console.log(\"charactersLength\",charactersLength,\"charactersLength\")\n        for ( var i = 0; i < charactersLength; i++ ) {\n            result += characters.charAt(Math. floor(Math. random() *charactersLength));\n        }\n        var newToken=result;\n        for(let i=0; i < indexes.length; i++){\n            if(indexes[i]%2==0){\n                newToken=insertString(newToken,\"a\",indexes[i])\n            }else{\n                newToken=insertString(newToken,\"s\",indexes[i])\n            }\n        }\n        // console.log(\"newToken=========\",newToken)\n\n        const accessToken  = store.getState().authSlice.accessToken;\n\n        if (accessToken !== '') {\n            config.headers['Authorization'] = `Bearer ${accessToken}`;\n            config.headers['x-access-token'] = `${accessToken}`;\n            config.headers['site-auth-token'] = newToken;\n        }\n\n        // Return the modified request config object for proceeding\n        return config;\n    },\n    function (error) {\n        if (error.request) {\n            // The request was made but no response was received\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n            // http.ClientRequest in node.js\n            debugHttpRequestError('%o', error.request);\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            debugHttpRequestError('Error %s', error.message);\n        }\n\n        // log a detailed information about the HTTP error\n        debugHttpRequestError(error.toJSON());\n\n        // Return the error object for next Promise chain\n        return Promise.reject(error);\n    }\n);\n\n// Add a response interceptor on this `instance` of `axios`\ninstance.interceptors.response.use(\n    function (response) {\n        // Any status code that lie within the range of 2xx cause this function to trigger\n\n        // Log the HTTP response on console\n        debugHttpResponse(`${response.config.method} ${response.config.url} %o`, response.data);\n\n        return response;\n    },\n    function (error) {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n\n        if (axios.isCancel(error)) {\n            debugHttpResponseError(error.message);\n        } else {\n            if (error.response) {\n                // Log the HTTP error info\n                debugHttpResponseError(`${error.config.method} ${error.config.url} %o`, error.response.data);\n\n                // Clear the Redux store if response code is 401 (Unauthenticated)\n                if (error.response.status === 401) {\n                    // logout();\n                }\n            }\n\n            // log a detailed information about the HTTP error\n            debugHttpResponseError(error.toJSON());\n        }\n\n        // Return the error object for next Promise chain\n        return Promise.reject(error);\n    }\n);\n\nexport default instance;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}